# -*- coding: utf-8 -*-
"""
Created on Mon Oct 21 18:10:34 2019

@author: 顾南城
"""

'''
1.链表的逆序
题目描述：
给定一个带头结点的单链表，请将其逆序

样例：
head->1->2->3->4->5->6->7

head->7->6->5->4->3->2->1

难度：3星
'''

'''
2.无序链表移除重复项
题目描述：
给定一个没有排序的链表，去掉其重复项，并保留原顺序

样例：
head->1->3->1->5->5->7

head->1->3->5->7

难度：3星
'''

'''
3.计算两个单链表表示数之和
题目描述：
给定两个单链表，链表的每个结点代表一位数，计算两个数的和

样例：
3->1->5
5->9->2

8->0->8
(即513 + 295 = 808,个位数在链表头)

难度：3星
'''

'''
4.链表的重新排序
题目描述：
给定链表 L0->L1->L2...L(n-1)->Ln,重新排序为L0->Ln->L1->L(n-1)->L2->L(n-2)...
要求：(1)在原来链表的基础上进行排序，即不能申请新的结点;(2)只能修改结点的next域，不能修改数据域

难度：3星
'''

'''
5.找出单链表的倒数第k个数
题目描述：
找出单链表中的倒数第k个元素

样例：
1->2->3->4->5->6->7

倒数第3个元素为5
难度：3星
'''

'''
6.检测单链表是否有环
题目描述：
单链表有环指的是单链表中某个结点的next域指向的是链表中在它之前的某一个结点，这样在尾部形成一个环形结构
如何判断单链表是否有环

难度：4星
'''

'''
7.把链表相邻元素翻转
题目描述：
把链表相邻关素翻转

样例：
1->2->3->4->5->6->7

2->1->4->3->6->5->7

难度：3星
'''

'''
8.把链表以K个结点为一组翻转
题目描述：
K链表翻转是指把每K个相邻的结点看成一组进行翻转，如果剩余结点不足K个，则保持不变

样例：
1->2->3->4->5->6->7   

K = 2, 2->1->4->3->6->5->7
K = 3, 3->2->1->6->5->4->7

难度：3星
'''

'''
9.合并两个有序链表
题目描述：
已知两个链表head1和head2各自有序(例如升序排列),请把它们合并成一个链表,要求合并后的链表依然有序

样例：
1->3->5
2->4->6

1->2->3->4->5->6

难度：3星
'''

'''
10.给定某结点的指针，删除该结点
题目描述：
在只给定单链表中某个结点的指针的情况下删除该结点

样例：
1->2->3->4->5->6->7  给定指向第5个元素的指针，要求把结点5删掉

1->2->3->4->6->7

难度：4星
'''

'''
11.判断两个无环单链表是否交叉
题目描述：
单链表相交指的是两个链表存在完全重合的部分
要求判断两个链表是否相交，如果相交，找出相交处的结点

样例：
head1->1->2->3->4
                 ->5->6->7
head2->7->6->5->4
两个链表相交于结点5

难度：4星
'''

'''
12.展开链接列表
题目描述：
给定一个有序链表，其中每个结点也表示一个有序链表，结点包含两个类型的指针：
(1)指向主链表中下一个结点的指针(代码中称为"正确"指针);(2)指向此头结点的链表(代码中称为"dowm"指针)
所有链表都被排序
实现一个函数flatten(),该函数用来将链表扁平化成单个链表,扁平化的链表也应该被排序


样例：
3       ->      11      ->      15      ->      30
|               |               |               |
6               21              22              39
|                               |               |
8                               50              40
|                                               |
31                                              55

3->6->8->11->15->21->22->30->31->39->40->50->55


难度：4星
'''